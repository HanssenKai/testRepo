name: get-build-args with semantic release

# Runs on all pushes to master and development
on:
  push:
    branches:
      - "master"
      - "main"
      - "development"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: hanssenkai/test2

# use templated build workflow from master branch
jobs:
  set-build-args:
    name: "set-build-args"
    runs-on: ubuntu-latest
    outputs:
      build_args_encrypted: ${{ steps.set_build_args.outputs.build_args_encrypted }}
    steps:
      - name: set build-args
        id: set_build_args
        shell: bash
        run: |
          build_args="GITHUB_NPM_PAT=${{secrets.READ_PAT}}"
          echo $build_args
          echo "::add-mask::$build_args"
          build_args_encrypted=$(gpg --symmetric --batch --passphrase "${{secrets.READ_PAT}}" --output - <(echo "$build_args") | base64 -w0)
          echo "build_args_encrypted=$build_args_encrypted" >> $GITHUB_OUTPUT

  publish:
    uses: HanssenKai/testRepo/.github/workflows/workflow.yaml@main
    needs: set-build-args
    secrets: inherit
    with:
      build-args-encrypted: ${{needs.set-build-args.outputs.build_args_encrypted}}

  build-testrepo2:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Echo Docker image tags
        run: |
          echo "tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.publish.outputs.version }}, ${{ steps.meta.outputs.tags }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.publish.outputs.version }}, ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_NPM_PAT=${{secrets.READ_PAT}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
