name: get-buildargs with semantic release

# Runs on all pushes to master and development
on: [push]

# use templated build workflow from master branch
jobs:
  create-buildargs:
    name: "create-buildargs"
    runs-on: ubuntu-latest
    outputs:
      build_args_encrypted: ${{ steps.set_outputs.outputs.build_args_encrypted }}
    steps:
      - name: Set outputs
        id: set_outputs
        shell: bash
        run: |
          build_args="GITHUB_NPM_PAT=${{secrets.READ_PAT}}"
          echo $build_args
          echo "::add-mask::$build_args"
          build_args_encrypted=$(gpg --symmetric --batch --passphrase "${{secrets.READ_PAT}}" --output - <(echo "$build_args") | base64 -w0)
          echo "build_args_encrypted=$build_args_encrypted" >> $GITHUB_OUTPUT


  get-buildargs:
    name: "get-buildargs"
    needs: create-buildargs
    runs-on: ubuntu-latest
    steps:
      - name: Get Deploy Key
        id: get_deploy_key
        shell: bash
        run: |
          build_args=$(gpg --decrypt --quiet --batch --passphrase "${{secrets.READ_PAT}}" --output - <(echo "${{ needs.create-buildargs.outputs.build_args_encrypted }}" | base64 --decode))
          echo "$build_args"
          echo "::add-mask::$build_args"
          echo "::set-output name=build_args::$build_args"
          echo "build_args=$build_args" >> $GITHUB_OUTPUT

      # Uses ${{ steps.get_deploy_key.outputs.build_args }} later...

  #publish:
  #  uses: HanssenKai/testRepo/.github/workflows/workflow.yaml@main
  #  needs: set_outputs
  #  secrets: inherit
  #  with:
  #    #build-args: "${{'${{secrets.READ_PAT}}'}}"
  #    #build-args: ${{'TEST=${{secrets.READ_PAT}'}}
  #    build-args: ${{needs.job1.outputs.output1}}
  #      #- GITHUB_NPM_PAT=${{secrets.READ_PAT}} 
